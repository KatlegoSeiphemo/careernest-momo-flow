import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { ArrowLeft, Download, Sparkles } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { toast } from "sonner";

const CVGenerator = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    personalInfo: {
      fullName: "",
      email: "",
      phone: "",
      location: "",
      linkedIn: ""
    },
    summary: "",
    experience: "",
    education: "",
    skills: "",
    achievements: ""
  });
  const [generatedCV, setGeneratedCV] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);

  const handleInputChange = (section: string, field: string, value: string) => {
    if (section === 'personalInfo') {
      setFormData(prev => ({
        ...prev,
        personalInfo: { ...prev.personalInfo, [field]: value }
      }));
    } else {
      setFormData(prev => ({ ...prev, [field]: value }));
    }
  };

  const generateCV = async () => {
    setIsGenerating(true);
    
    // Simulate AI generation (would use Google Cloud API in real implementation)
    setTimeout(() => {
      const cv = `
# ${formData.personalInfo.fullName}

**Contact Information:**
- Email: ${formData.personalInfo.email}
- Phone: ${formData.personalInfo.phone}
- Location: ${formData.personalInfo.location}
- LinkedIn: ${formData.personalInfo.linkedIn}

## Professional Summary
${formData.summary || "Professional with strong background and commitment to excellence."}

## Work Experience
${formData.experience || "Experience details will be enhanced with AI optimization when Google Cloud API is configured."}

## Education
${formData.education || "Educational background to be detailed."}

## Key Skills
${formData.skills || "Skills assessment and optimization available with full AI integration."}

## Achievements
${formData.achievements || "Notable achievements and accomplishments."}

---
*Generated by CareerNest AI CV Generator*
      `;
      
      setGeneratedCV(cv);
      setIsGenerating(false);
      toast.success("CV generated successfully!");
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-yellow-50 to-red-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center h-16">
            <Button variant="ghost" onClick={() => navigate("/dashboard")}>
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Dashboard
            </Button>
            <h1 className="text-xl font-semibold text-primary ml-4">AI CV Generator</h1>
          </div>
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Input Form */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Sparkles className="w-5 h-5 mr-2 text-primary" />
                CV Information
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Personal Info */}
              <div className="space-y-4">
                <h3 className="font-semibold">Personal Information</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="fullName">Full Name</Label>
                    <Input
                      id="fullName"
                      value={formData.personalInfo.fullName}
                      onChange={(e) => handleInputChange("personalInfo", "fullName", e.target.value)}
                    />
                  </div>
                  <div>
                    <Label htmlFor="email">Email</Label>
                    <Input
                      id="email"
                      type="email"
                      value={formData.personalInfo.email}
                      onChange={(e) => handleInputChange("personalInfo", "email", e.target.value)}
                    />
                  </div>
                  <div>
                    <Label htmlFor="phone">Phone</Label>
                    <Input
                      id="phone"
                      value={formData.personalInfo.phone}
                      onChange={(e) => handleInputChange("personalInfo", "phone", e.target.value)}
                    />
                  </div>
                  <div>
                    <Label htmlFor="location">Location</Label>
                    <Input
                      id="location"
                      value={formData.personalInfo.location}
                      onChange={(e) => handleInputChange("personalInfo", "location", e.target.value)}
                    />
                  </div>
                </div>
              </div>

              {/* Other sections */}
              <div className="space-y-4">
                <div>
                  <Label htmlFor="summary">Professional Summary</Label>
                  <Textarea
                    id="summary"
                    value={formData.summary}
                    onChange={(e) => handleInputChange("", "summary", e.target.value)}
                    placeholder="Brief professional summary..."
                  />
                </div>
                
                <div>
                  <Label htmlFor="experience">Work Experience</Label>
                  <Textarea
                    id="experience"
                    value={formData.experience}
                    onChange={(e) => handleInputChange("", "experience", e.target.value)}
                    placeholder="List your work experience..."
                  />
                </div>
                
                <div>
                  <Label htmlFor="education">Education</Label>
                  <Textarea
                    id="education"
                    value={formData.education}
                    onChange={(e) => handleInputChange("", "education", e.target.value)}
                    placeholder="Educational background..."
                  />
                </div>
                
                <div>
                  <Label htmlFor="skills">Skills</Label>
                  <Textarea
                    id="skills"
                    value={formData.skills}
                    onChange={(e) => handleInputChange("", "skills", e.target.value)}
                    placeholder="Your key skills..."
                  />
                </div>
              </div>

              <Button 
                onClick={generateCV} 
                className="w-full" 
                disabled={isGenerating}
              >
                {isGenerating ? "Generating..." : "Generate AI-Enhanced CV"}
              </Button>
            </CardContent>
          </Card>

          {/* Generated CV Preview */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center justify-between">
                <span>Generated CV Preview</span>
                {generatedCV && (
                  <Button variant="outline" size="sm">
                    <Download className="w-4 h-4 mr-2" />
                    Download
                  </Button>
                )}
              </CardTitle>
            </CardHeader>
            <CardContent>
              {generatedCV ? (
                <div className="bg-white p-6 rounded border min-h-[600px]">
                  <pre className="whitespace-pre-wrap text-sm">{generatedCV}</pre>
                </div>
              ) : (
                <div className="text-center text-muted-foreground py-12">
                  <Sparkles className="w-12 h-12 mx-auto mb-4 opacity-50" />
                  <p>Fill out the form and click "Generate" to see your AI-enhanced CV</p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
};

export default CVGenerator;
